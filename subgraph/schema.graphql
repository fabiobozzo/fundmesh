type Project @entity {
  id: ID!
  projectAddress: Bytes!
  owner: Bytes!
  recipient: Bytes!
  cid: String!
  name: String!
  description: String!
  imageCid: String!
  minimumContribution: BigInt!
  targetContribution: BigInt!
  deadline: BigInt!
  currentBalance: BigInt!
  contributorsCount: BigInt!
  approved: Boolean!
  approvedAt: BigInt
  approvalsCount: BigInt!
  completed: Boolean!
  completedAt: BigInt
  cancelled: Boolean!
  cancelledAt: BigInt
  progressRatio: BigDecimal!
  trendingScore: BigDecimal!
  contributors: [Contributor!]! @derivedFrom(field: "project")
  activities: [Activity!]! @derivedFrom(field: "project")
  createdAt: BigInt!
}

type Milestone @entity {
  id: ID!
  project: Project!
  index: BigInt!
  description: String!
  threshold: BigInt!
  recipient: Bytes!
  approved: Boolean!
  approvedAt: BigInt
  approvalsCount: BigInt!
  completed: Boolean!
  completedAt: BigInt
}

enum ActivityType {
  PROJECT_CREATED
  CONTRIBUTION
  APPROVAL_SUBMITTED
  PROJECT_APPROVED
  PROJECT_COMPLETED
  PROJECT_CANCELLED
  PROJECT_EXPIRED
  MILESTONE_APPROVAL_SUBMITTED
  MILESTONE_APPROVED
  MILESTONE_COMPLETED
  REWARD_CLAIMED
}

type Activity @entity {
  id: ID!
  project: Project!
  type: ActivityType!
  from: Bytes
  amount: BigInt
  balance: BigInt
  timestamp: BigInt!
}

type Contributor @entity {
  id: ID!
  project: Project!
  address: Bytes!
  amount: BigInt!
  timestamp: BigInt!
}